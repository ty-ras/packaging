name: Build, test, and publish

on:
  workflow_call:
    inputs:
      fetch-depth:
        required: true
        type: number
      pre-run-function:
        required: false
        type: string
        default: |
          tyras_pre_run ()
          {
            echo 'No pre-run.'
          }
      post-run-function:
        required: false
        type: string
        default: |
          tyras_post_run ()
          {
            cd "$1"
            cp ../LICENSE ./LICENSE.txt
            # Note - yarn doesn't have functionality to install package without saving it to package.json (!)
            # So we use global install instead.
            yarn global add "@jsdevtools/npm-publish@$(cat ../versions/npm-publish)"
            npm-publish --dry-run --access public
          }
    secrets:
      npm-publish-token:
        required: false

jobs:
  build_and_test:
    strategy:
      matrix:
        dir:
          - backend-node-io-ts-openapi
          - frontend-fetch-io-ts
          - extras-backend-io-ts
          - extras-frontend-io-ts
          - backend-node-zod-openapi
          - frontend-fetch-zod
          - extras-backend-zod
          - extras-frontend-zod
    runs-on: ubuntu-latest
    name: Build and test ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - id: prepare
        name: Prepare ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ${{ inputs.pre-run-function }}
          tyras_pre_run '${{ matrix.dir }}'

      - id: install
        name: Install dependencies of ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/install.sh '${{ matrix.dir }}' --frozen-lockfile

      - id: lint
        name: Lint ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/lint.sh '${{ matrix.dir }}'

      # Run build *after* tests - since tests no longer require transpiled JS to run
      # We still want to run build to catch any TS error possibly lurking somewhere.
      # Because we test first and build then, we can do compilation without __tests__ directory.
      # We re-add it to src folder in order to include it in published NPM package (if CD pipeline).
      # Notice we must produce stub package.json file to dist-cjs folder, otherwise `require` will fail on relative imports within the dist-cjs folder.
      - id: compile
        name: Compile ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/build.sh '${{ matrix.dir }}' ci
          if [[ -d '${{ matrix.dir }}/dist-cjs' ]]; then
            sudo chmod -R o=rwX '${{ matrix.dir }}/dist-cjs'
            cat '${{ matrix.dir }}/package.json' | jq -M 'del(.files, .type, .main, .module, .types, .exports)' > '${{ matrix.dir }}/dist-cjs/package.json'
          fi

      - id: finalize
        name: Finalize ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ${{ inputs.post-run-function }}
          tyras_post_run '${{ matrix.dir }}'
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.npm-publish-token }}
